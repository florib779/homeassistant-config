homeassistant:
  packages: !include_dir_named packages

################################################################################

frontend:
  themes: !include_dir_merge_named themes

# Includes #####################################################################
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
################################################################################

default_config: # Configure a default setup of Home Assistant (frontend, api, etc)

wake_on_lan: # Further configuration in the corresponding package yaml files

# https://www.home-assistant.io/integrations/weather.template/
# https://www.home-assistant.io/integrations/openweathermap/
weather:
  - platform: 'template'
    name: "Weather Station"
    condition_template: "{{ states('weather.home') }}"
    forecast_template: "{{ state_attr('weather.home_hourly', 'forecast') }}"
    humidity_template: "{{ state_attr('weather.home', 'humidity') | float }}"
    ozone_template: "{{ state_attr('weather.home', 'ozone') | float }}"
    pressure_template: "{{ state_attr('weather.home', 'pressure') | float }}"
    temperature_template: "{{ state_attr('weather.home', 'temperature') | float }}"
    visibility_template: "{{ state_attr('weather.home', 'visibility') | float }}"
    wind_bearing_template: "{{ state_attr('weather.home', 'wind_bearing') | float }}"
    wind_speed_template: "{{ state_attr('weather.home', 'wind_speed') | float }}"

binary_sensor:
  - platform: 'workday'
    country: 'DE'
    province: 'BY'

sensor:
  - platform: 'time_date'
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'time_date'

switch:
  - platform: flux # https://www.home-assistant.io/integrations/flux/
    lights:
      - light.bedroom_light
      - light.kitchen_mood_light
      - light.livingroom_floodlight
      - light.livingroom_tv_light
    name: Fluxer
    start_time: "7:00"
    stop_time: "1:00"

template:
  - binary_sensor:
      - name: "Basement Washer on"
        unique_id: "basement_washer_on"
        delay_off:
          hours: 2
        state: >
          {% if states.sensor.basement_washer_power_consumption.state | float > 10 %}
            On
          {% else %}
            Off
          {% endif %}
      - name: "Kitchen Cookerhood on"
        unique_id: "kitchen_cookerhood_on"
        state: >
          {% if states.sensor.kitchen_cookerhood_power_consumption.state | float > 1 %}
            On
          {% else %}
            Off
          {% endif %}
      - name: "Kitchen Dishwasher on"
        unique_id: "kitchen_dishwasher_on"
        state: >
          {% if states.sensor.kitchen_dishwasher_power_consumption.state | float > 2 %}
            On
          {% else %}
            Off
          {% endif %}
      - name: "Makita Akku charging"
        unique_id: "makita_akku_charging"
        state:  >
          {% if states.sensor.storeroom_switch_power_consumption.state | float > 1 %}
            On
          {% else %}
            Off
          {% endif %}
  - sensor:
      - name: "Electricity Price"
        unique_id: "electricity_price"
        # 2022-06-07
        state: "0.309"
        unit_of_measurement: "â‚¬/kWh"
      - name: "Fritzbox Callmonitor Phonebook"
        unique_id: "fritzbox_callmonitor_phonebook"
        state: >-
            {%- if is_state("sensor.fritzbox_callmonitor", "idle") %}
                Free
            {%  elif is_state("sensor.fritzbox_callmonitor", "dialing") %}
                Dialing '{{ states.sensor.fritzbox_callmonitor.attributes.to_name }} ({{ states.sensor.fritzbox_callmonitor.attributes.to }})'
            {%  elif is_state("sensor.fritzbox_callmonitor", "ringing") %}
                Incoming call from '{{ states.sensor.fritzbox_callmonitor.attributes.from_name }} ({{ states.sensor.fritzbox_callmonitor.attributes.from }})'
            {% else %}
                Talking with '{{ states.sensor.fritzbox_callmonitor.attributes.with_name }} ({{ states.sensor.fritzbox_callmonitor.attributes.with }})'
            {%- endif %}
        icon: >-
            {% if is_state("sensor.fritzbox_callmonitor", "idle") %}
                mdi:phone-classic
            {% elif is_state("sensor.fritzbox_callmonitor", "dialing") %}
                mdi:phone-outgoing
            {% elif is_state("sensor.fritzbox_callmonitor", "ringing") %}
                mdi:phone-incoming
            {% else %}
                mdi:phone-in-talk
            {% endif %}
      - name: "Kitchen Fridge States"
        unique_id: "kitchen_fridge_states"
        state: >
          {% if states.sensor.kitchen_fridge_power_consumption.state | float > 75 %}
            Open
          {% elif states.sensor.kitchen_fridge_power_consumption.state | float > 58 %}
            Cooling
          {% elif states.sensor.kitchen_fridge_power_consumption.state | float > 1 %}
            Open
          {% else %}
            Off
          {% endif %}
      - name: "Livingroom Fan Stages"
        unique_id: "livingroom_fan_stages"
        state: >
          {% if states.sensor.livingroom_fan_power_consumption.state | float > 37 %}
            Stage 3
          {% elif states.sensor.livingroom_fan_power_consumption.state | float > 33 %}
            Stage 2
          {% elif states.sensor.livingroom_fan_power_consumption.state | float > 1 %}
            Stage 1
          {% else %}
            Off
          {% endif %}
      - name: "Livingroom PC on"
        unique_id: "livingroom_pc_on"
        state: >
          {% if states.sensor.livingroom_pc_power_consumption.state | float > 2 %}
            On
          {% elif states.sensor.livingroom_pc_power_consumption.state | float > 0.5 %}
            Standby
          {% else %}
            Off
          {% endif %}

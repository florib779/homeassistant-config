homeassistant:
  customize: !include customize.yaml # Customizations from Configuration > Customizations will be stored here
  packages: !include_dir_named integrations

################################################################################

frontend:
  themes: !include_dir_merge_named themes

# Includes #####################################################################
automation: !include automations.yaml
group: !include groups.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
################################################################################

default_config: # Configure a default setup of Home Assistant (frontend, api, etc)

tts: # Text to speech
  - platform: google_translate
    language: 'en'

wake_on_lan: # Further configuration in the corresponding package yaml files

sensor:
  - platform: time_date # Nescessary for the timer
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'
  - platform: uptime # The uptime sensor stores the timestamp (date and time) when Home Assistant was last started.
  - platform: github
    access_token: !secret github_access_token
    repositories:
      - path: 'florib779/homeassistant-config'
  - platform: template
    sensors:
      date:
        entity_id: sensor.time
        value_template: "{{ as_timestamp(now()) | timestamp_custom('%A, %d.%m.%Y') }}"
      time_formatted:
        value_template: "{{ as_timestamp(states('sensor.date_time_utc')) | timestamp_custom('%A %B %-m, %I:%M %p') }}"
      basement_washer_on:
        #friendly_name: 'Washer'
        value_template: >
          {% if states.sensor.basement_washer_power_consumption.state | float > 5 %}
            Washing
          {% else %}
            Off
          {% endif %}
      kitchen_dishwasher_on:
        #friendly_name: 'Dishwasher'
        value_template: >
          {% if states.sensor.kitchen_dishwasher_power_consumption.state | float > 5 %}
            Cleaning
          {% else %}
            Off
          {% endif %}
      office_laptop_charged:
        value_template:  >
          {% if states.sensor.office_switch_power_consumption.state | float > 5 %}
            On
          {% else %}
            Off
          {% endif %}
      storeroom_akku_charged:
        value_template:  >
          {% if states.sensor.storeroom_switch_power_consumption.state | float > 1 %}
            Charging
          {% else %}
            Charged
          {% endif %}
      electricity_price:
        #friendly_name: 'Electricity Price'
        value_template: "0.298"
  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: "/"
    - type: last_boot
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: memory_use_percent
    - type: processor_temperature
    - type: processor_use
    - type: swap_use_percent
